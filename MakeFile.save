# Makefile pour un projet C++ avec CUDA et OpenMP

# Compilateur CUDA
#NVCC := nvcc

# Compilateur C++
CXX := clang++

# Options de compilation
CXXFLAGS := -std=c++11 -Wall -fopenmp -I/usr/lib/gcc/x86_64-linux-gnu/11/include/
#CUDAFLAGS := -arch=sm_52

# Options de l'édition des liens
LDFLAGS := -lm

# Nom de l'exécutable
TARGET := spinner_code

# Liste des fichiers sources C++
SRCS_CPP := main.cpp spinner_ppm.cpp
OBJS_CPP := $(SRCS_CPP:.cpp=.o)

# Liste des fichiers sources CUDA
#SRCS_CUDA := kernel.cu 
#OBJS_CUDA := $(SRCS_CUDA:.cu=.o)

# Liste des fichiers d'en-tête
HEADERS := spinner_ppm.h

# Règle par défaut (première règle dans le fichier)
all: $(TARGET)

# Règle pour la cible principale
$(TARGET): $(OBJS_CPP) $(OBJS_CUDA)
	$(CXX) $(CXXFLAGS) -o $(TARGET) $(OBJS_CPP) $(OBJS_CUDA) $(CUDAFLAGS)

# Règle générique pour la compilation des fichiers sources C++
%.o: %.cpp $(HEADERS)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Règle pour la compilation des fichiers sources CUDA
#%.o: %.cu $(HEADERS)
#	$(NVCC) $(CUDAFLAGS) -c $< -o $@

# Nettoyer les fichiers objets et l'exécutable
clean:
	rm -f $(OBJS_CPP) $(OBJS_CUDA) $(TARGET)

